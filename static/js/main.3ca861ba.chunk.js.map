{"version":3,"sources":["Leaderboard.js","queries.js","Inspirations.js","App.js","index.js","logo.svg","allegro.svg"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","chips","height","alignItems","loader","justifyContent","stars","color","primary","main","LOCALSTORAGE_KEY","Leaderboard","useState","localStorage","getItem","token","setToken","client","ApolloClient","uri","request","operation","setContext","headers","authorization","PullRequestTable","userNames","classes","useQuery","users","gql","map","username","join","pollInterval","loading","error","data","TokenPrompt","updateToken","className","CircularProgress","size","entries","Object","search","edges","reduce","acc","edge","key","JSON","stringify","node","author","concat","title","repository","permalink","toUsersMap","sort","a","b","calcScore","List","length","ListItem","ListItemText","entry","i","user","parse","pullRequests","Fragment","login","ListItemAvatar","Avatar","alt","src","avatarUrl","Link","href","secondary","renderChips","ListItemSecondaryAction","style","Typography","Divider","component","Paper","padding","TextField","onChange","e","target","value","placeholder","Button","variant","onClick","setItem","console","log","it","stargazers","totalCount","pr","Chip","marginLeft","label","name","marginBottom","spacing","marginTop","list","userRepos","inspirations","link","Inspirations","gutterBottom","align","dense","brand","marginRight","logo","header","margin","textAlign","gridArea","footer","app","gridTemplateColumns","App","AppBar","position","Toolbar","allegro","Container","createMuiTheme","deepOrange","indigo","ReactDOM","render","ThemeProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3ca861ba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ApolloProvider, useQuery } from '@apollo/react-hooks';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ApolloClient from 'apollo-boost';\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { getPullRequests } from \"./queries\";\nimport users from './users';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Divider from \"@material-ui/core/Divider\";\nimport StarIcon from '@material-ui/icons/Star';\nimport Chip from \"@material-ui/core/Chip\";\nimport Link from \"@material-ui/core/Link\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    root: { width: '100%', backgroundColor: theme.palette.background.paper },\n    inline: { display: 'inline' },\n    chips: { display: 'flex', height: 42, alignItems: 'center' },\n    loader: { display: 'flex', height: 200, alignItems: 'center', justifyContent: 'center' },\n    stars: {\n        display: 'flex',\n        alignItems: 'center',\n        width: 100,\n        justifyContent: 'space-around',\n        color: theme.palette.primary.main\n    }\n}));\n\nconst LOCALSTORAGE_KEY = 'github_token';\n\nexport default function Leaderboard() {\n    const [token, setToken] = useState(localStorage.getItem(LOCALSTORAGE_KEY));\n\n    const client = new ApolloClient({\n        uri: 'https://api.github.com/graphql', request: (operation) => {\n            operation.setContext({ headers: { authorization: `Bearer ${token}` } })\n        }\n    });\n\n    return <ApolloProvider client={client}>\n        <PullRequestTable client={client} token={token} setToken={setToken}/>\n    </ApolloProvider>;\n}\n\nfunction PullRequestTable({ client, token, setToken }) {\n    const classes = useStyles();\n    const { loading, error, data } = useQuery(getPullRequests(users), { pollInterval: 300000 });\n\n    if (!token) return <TokenPrompt updateToken={setToken}/>;\n\n    if (loading) return <div className={classes.loader}><CircularProgress size={48}/></div>;\n    if (error) {\n        setToken(null);\n        return <p>error</p>;\n    }\n    const entries = Object.entries(toUsersMap(data)).sort((a, b) => {\n        return calcScore(b[1]) - calcScore(a[1]);\n    });\n    return (\n        <ApolloProvider client={client}>\n            <List className={classes.root}>\n                {entries.length === 0 ?\n                    <ListItem alignItems=\"flex-start\"><ListItemText>Brak Pull Request√≥w</ListItemText></ListItem> : \"\"}\n                {entries.map((entry, i) => {\n                    const user = JSON.parse(entry[0]);\n                    const pullRequests = entry[1];\n                    return <React.Fragment key={user.login}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <Avatar alt={user.login} src={user.avatarUrl}/>\n                            </ListItemAvatar>\n                            <ListItemText className={classes.chips}\n                                          primary={<Link href={`https://github.com/${user.login}`}>{user.login}</Link>}\n                                          secondary={renderChips(pullRequests)}/>\n                            <ListItemSecondaryAction className={classes.stars}>\n                                <StarIcon style={{ height: 40 }}/>\n                                <Typography>{calcScore(pullRequests)}</Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        {i === entries.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                })}\n            </List>\n        </ApolloProvider>\n    );\n}\n\nfunction TokenPrompt({ updateToken }) {\n    const [token, setToken] = useState(null);\n    return (\n        <Paper style={{ padding: 20, display: 'flex', justifyContent: 'space-around' }}>\n            <TextField onChange={(e) => setToken(e.target.value)} placeholder=\"github personal token\" value={token}\n                       style={{ width: '90%' }}/>\n            <Button variant=\"primary\" onClick={() => {\n                localStorage.setItem(LOCALSTORAGE_KEY, token);\n                updateToken(token);\n            }}>Dodaj</Button>\n        </Paper>\n    );\n}\n\nfunction calcScore(pullRequests) {\n    console.log(pullRequests);\n    return pullRequests.map(it => it.repository.stargazers.totalCount).reduce((a, b) => a + b, 0)\n}\n\nfunction renderChips(pullRequests) {\n    return pullRequests.map((pr, i) => <Chip component=\"small\" key={i} style={{ marginLeft: '10px' }} size=\"small\"\n                                             label={pr.repository.name}/>);\n}\n\nfunction toUsersMap(data) {\n    return data.search.edges.reduce((acc, edge) => {\n        const key = JSON.stringify(edge.node.author);\n        if (!acc[key]) acc[key] = [];\n        acc[key] = acc[key].concat([{\n            title: edge.node.title,\n            repository: edge.node.repository,\n            permalink: edge.node.permalink\n        }]);\n        return acc;\n    }, {});\n}\n","import { gql } from \"apollo-boost\";\n\n/**\n * Creates GraphQL query fetching Pull Requests of given userNames\n * @param userNames array of userNames to get\n * @returns DocumentNode\n */\nexport function getPullRequests(userNames) {\n    return gql`\n      {\n        search(query: \"is:pr created:2019-10-24 ${userNames.map(username => `author:${username}`).join(' ')}\", type: ISSUE, first: 100) {\n          pageInfo {\n            endCursor\n            startCursor\n          }\n          edges {\n            node {\n              ... on PullRequest {\n                title\n                repository{\n                  name\n                  url\n                  stargazers {\n                    totalCount\n                  }\n                }\n                permalink\n                author {\n                  login\n                  avatarUrl\n                }\n              }\n            }\n          }\n        }\n      }\n    `;\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n    title: { color: 'white', marginBottom: theme.spacing(2), marginTop: theme.spacing(2) },\n    list: { width: '100%', backgroundColor: theme.palette.background.paper }\n}));\n\nconst userRepos = [\n    'https://github.com/allegro/hermes',\n    'https://github.com/resilience4j/resilience4j',\n    'https://github.com/spring-projects/spring-fu',\n    'https://github.com/micrometer-metrics/micrometer',\n    'https://github.com/tsenart/vegeta',\n    'https://github.com/tensorflow/probability',\n    'https://github.com/mitmproxy/mitmproxy',\n    'https://github.com/badges/shields',\n    'https://github.com/elastic/elasticsearch',\n    'https://github.com/nodejs/node',\n    'https://github.com/Microsoft/TypeScript',\n    'https://github.com/Microsoft/vscode',\n    'https://github.com/javers/javers',\n    'https://github.com/dankraw/ssh-aliases',\n    'https://github.com/Netflix/Hystrix',\n    'https://github.com/spring-projects/spring-boot',\n    'https://github.com/apache/incubator-druid',\n    'https://github.com/vapor/vapor',\n    'https://github.com/IBM-Swift/Kitura',\n    'https://github.com/mat3e/dorf',\n    'https://github.com/sloik/SwiftPlayground',\n];\n\nconst inspirations = [\n    {\n        title: 'Hacktoberfest labeled',\n        link: 'https://github.com/search?q=label:hacktoberfest+state:open+type:issue',\n        label: 'label:hacktoberfest state:open type:issue'\n    },\n    {\n        title: 'Good first issue',\n        link: 'https://github.com/search?q=label%3A%22good+first+issue%22+state%3Aopen&type=Issues&ref=advsearch&l=&l=',\n        label: 'label: \"good first issue\" state:open'\n    },\n    {\n        title: 'Ideal for contribution',\n        link: 'https://github.com/search?q=label%3A%22ideal-for-contribution%22+state%3Aopen&type=Issues',\n        label: 'label:\"ideal for contribution\" state:open'\n    }\n];\n\nexport default function Inspirations() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Typography gutterBottom variant=\"h4\" align=\"center\" className={classes.title}>Inspiracje</Typography>\n            <List className={classes.list}>\n                {inspirations.map((it, i) =>\n                    <React.Fragment>\n                        <ListItem>\n                            <ListItemText primary={it.title} secondary={\n                                <Link href={it.link}>{it.label}</Link>\n                            }/>\n                        </ListItem>\n                        {i === inspirations.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                )}\n            </List>\n            <Typography gutterBottom variant=\"h4\" align=\"center\" className={classes.title}>\n                Projekty zg≈Çoszone przez uczestnik√≥w\n            </Typography>\n            <List dense className={classes.list}>\n                {userRepos.map((it, i) =>\n                    <React.Fragment>\n                        <ListItem>\n                            <ListItemText primary={<Link href={it}>{it}</Link>}/>\n                        </ListItem>\n                        {i === userRepos.length - 1 ? \"\" : <Divider component=\"li\"/>}\n                    </React.Fragment>\n                )}\n            </List>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport allegro from './allegro.svg';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport Leaderboard from \"./Leaderboard\";\nimport Inspirations from \"./Inspirations\";\n\nconst useStyles = makeStyles(theme => ({\n    root: { height: '100vh', width: '100%' },\n    brand: { marginRight: theme.spacing(2) },\n    logo: { marginTop: 20, width: '100%' },\n    header: { margin: theme.spacing(4), textAlign: 'center', gridArea: '1 / 1 / 2 / 2' },\n    main: { gridArea: '2 / 1 / 3 / 2', color: '#fff' },\n    title: { padding: theme.spacing(2) },\n    footer: { gridArea: '3 / 1 / 4 / 2' },\n    app: { display: 'grid', gridTemplateColumns: '1fr' }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <img src={allegro} className={classes.brand} alt=\"allegro\"/>\n                    <Typography variant=\"h6\">\n                        Hacktoberfest\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Container className={classes.app}>\n                <header className={classes.header}>\n                    <img src={logo} className={classes.logo} alt=\"logo\"/>\n                </header>\n                <main className={classes.main}>\n                    <Typography gutterBottom variant=\"h3\" align=\"center\">TOP 25</Typography>\n                    <Leaderboard />\n                    <Typography component=\"p\" variant=\"caption\" align=\"center\" className={classes.title}>\n                        is:<strong>pr</strong> created:<strong>2019-10-24</strong> author:<strong>login</strong>\n                    </Typography>\n                </main>\n                <footer className={classes.footer}>\n                    <Inspirations/>\n                </footer>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { deepOrange, indigo } from \"@material-ui/core/colors\";\nimport App from './App';\nimport './index.css';\n\nconst theme = createMuiTheme({ palette: { primary: deepOrange, secondary: indigo } });\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <App/>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.cc105787.svg\";","module.exports = __webpack_public_path__ + \"static/media/allegro.b101d99d.svg\";"],"sourceRoot":""}